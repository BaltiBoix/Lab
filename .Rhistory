source('~/RProjects/Lab/TestSGLDatos.R', encoding = 'UTF-8', echo=TRUE)
require(dplyr, quietly = TRUE)
require(ggplot2, quietly = TRUE)
require(zoo, quietly = TRUE)
if(!exists(plotgraf)) source("plotgraf.R")
if(!exists(leedatos)) source("leedatos.R")
if(!exists(filtraRHC)) source("filtraRHC.R")
leedatos()
filtraRHC()
plotgraf()
source('~/RProjects/Lab/TestSGLDatos.R', echo=TRUE)
source('~/RProjects/Lab/TestSGLDatos.R', echo=TRUE)
source('~/RProjects/Lab/TestSGLDatos.R', echo=TRUE)
source('~/RProjects/Lab/TestSGLDatos.R', echo=TRUE)
source('~/RProjects/Lab/TestSGLDatos.R', echo=TRUE)
View(df)
df1<-filter(df, componente=="I. VISCOSIDAD NOR 4.3 CST A 100§C")
View(df1)
remove(df1)
df<-filtraRHC()
debugSource('~/RProjects/Lab/filtraRHC.R', encoding = 'UTF-8')
df<-filtraRHC()
source('~/RProjects/Lab/filtraRHC.R', encoding = 'UTF-8')
df<-leedatos()
source('~/RProjects/Lab/filtraRHC.R', encoding = 'UTF-8')
df<-filtraRHC()
plotgraf()
dev.off()
plotgraf()
group_by(df, componente, UCO)
g<-group_by(df, componente, UCO)
summarize(g, media=mean(valorn), std=sd(valorn), n=n(valorn))
summarize(g, media=mean(valorn), std=sd(valorn), n=n())
summarize(g, media=mean(valorn), std=sd(valorn), n=n(), rm.na())
summarize(g, media=mean(valorn), std=sd(valorn), n=n(), rm.na)
summarize(g, media=mean(valorn), std=sd(valorn, rm.na()), n=n())
summarize(g, media=mean(valorn), std=sd(valorn, rm.na()), n=n(), na.rm=TRUE)
summarize(g, media=mean(valorn), std=sd(valorn), n=n(), na.rm=TRUE)
summarize(g, media=mean(valorn, na.rm=TRUE), std=sd(valorn, na.rm=TRUE), n=n())
df1<-filter(df, UCO==TRUE)
g1<-group_by(df1, componente)
summarize(g1, mediat=mean(valorn, na.rm=TRUE), stdt=sd(valorn, na.rm=TRUE), nt=n())
dft<-summarize(g1, mediat=mean(valorn, na.rm=TRUE), stdt=sd(valorn, na.rm=TRUE), nt=n())
df1<-filter(df, UCO==FALSE)
g1<-group_by(df1, componente)
dff<-summarize(g1, mediaf=mean(valorn, na.rm=TRUE), stdf=sd(valorn, na.rm=TRUE), nf=n())
df2<-merge(dft, dff)
head(df2)
?test.t
?t.test
g<-group_by(df, componente)
t.test(select(df, valorn), select(df, valorn), var.equal=TRUE, alternative="g")
t.test(select(filter(df, UCO==TRUE), valorn), select(filter(df, UCO==FALSE), valorn), var.equal=TRUE, alternative="g")
t.test(select(filter(df, UCO==TRUE, componente=="AZUFRE"), valorn), select(filter(df, UCO==FALSE, componente=="AZUFRE"), valorn), var.equal=TRUE, alternative="g")
t.test(select(filter(df, UCO==TRUE, componente=="I. VISCOSIDAD NOR 4.3 CST A 100§C"), valorn), select(filter(df, UCO==FALSE, componente=="I. VISCOSIDAD NOR 4.3 CST A 100§C"), valorn), var.equal=TRUE, alternative="g")
ordencomp<-c("DENSIDAD 15§C",
ordencomp<-c("DENSIDAD 15§C",
"AZUFRE",
"NITROGENO",
"COLOR ASTM",
"P.INICIAL",
"1% RECOGIDO",
"5% RECOGIDO",
"10% RECOGIDO",
"20% RECOGIDO",
"30% RECOGIDO",
"40% RECOGIDO",
"50% RECOGIDO",
"60% RECOGIDO",
"70% RECOGIDO",
"80% RECOGIDO",
"90% RECOGIDO",
"95% RECOGIDO",
"99% RECOGIDO",
"P.FINAL",
"VOL.FINAL",
"EVAPORADO A 360§C (D2887)",
"AGUA X DESTILACION",
"INDICE REFRACCION A 60§C",
"INDICE VISCOSIDAD",
"I. VISCOSIDAD NOR 4.3 CST A 100§C",
"VISCOSIDAD A 100§C",
"VISCOSIDAD A 65§C")
length(ordencomp)
ordencomp[1]
tt<-t.test(select(filter(df, UCO==TRUE, componente=="I. VISCOSIDAD NOR 4.3 CST A 100§C"), valorn), select(filter(df, UCO==FALSE, componente=="I. VISCOSIDAD NOR 4.3 CST A 100§C"), valorn), var.equal=TRUE, alternative="g")
tt
tt$null.value
tt$conf.int
tt$conf.int[1]
tt$conf.int[2]
tt$conf.int[3]
tt
tt$estimate
tt$p.value
for(i in 1:length(ordencomp)){
tt<-t.test(select(filter(df, UCO==TRUE, componente==ordencomp[i]), valorn),
select(filter(df, UCO==FALSE, componente==ordencomp[i]), valorn),
var.equal=TRUE, alternative="g")
ttestdf[i]$componente<-ordencomp[i]
ttestdf[i]$meanTRUE<-tt$estimate[1]
ttestdf[i]$meanFALSE<-tt$estimate[2]
ttestdf[i]$pt<-tt$p.value
}
source('~/RProjects/Lab/leedatos.R')
ttestdf<- data.frame(componente, meanTRUE, meanFALSE, pt)
for(i in 1:length(ordencomp)){
tt<-t.test(select(filter(df, UCO==TRUE, componente==ordencomp[i]), valorn),
select(filter(df, UCO==FALSE, componente==ordencomp[i]), valorn),
var.equal=TRUE, alternative="g")
ttestdf[i]$componente<-ordencomp[i]
ttestdf[i]$meanTRUE<-tt$estimate[1]
ttestdf[i]$meanFALSE<-tt$estimate[2]
ttestdf[i]$pt<-tt$p.value
}
ttestdf<- data.frame(componente, meanTRUE, meanFALSE, pt)
ttestdf<- data.frame(componente=character(), meanTRUE=double(),
meanFALSE=double(), pt=double())
for(i in 1:length(ordencomp)){
tt<-t.test(select(filter(df, UCO==TRUE, componente==ordencomp[i]), valorn),
select(filter(df, UCO==FALSE, componente==ordencomp[i]), valorn),
var.equal=TRUE, alternative="g")
ttestdf[i]$componente<-ordencomp[i]
ttestdf[i]$meanTRUE<-tt$estimate[1]
ttestdf[i]$meanFALSE<-tt$estimate[2]
ttestdf[i]$pt<-tt$p.value
}
ttestdf[i, 1]<-ordencomp[i]
ttestdf<- data.frame(componente=character(), meanTRUE=double(),
meanFALSE=double(), pt=double(),
stringsAsFactors=FALSE)
for(i in 1:length(ordencomp)){
tt<-t.test(select(filter(df, UCO==TRUE, componente==ordencomp[i]), valorn),
select(filter(df, UCO==FALSE, componente==ordencomp[i]), valorn),
var.equal=TRUE, alternative="g")
ttestdf[i, 1]<-ordencomp[i]
ttestdf[i]$meanTRUE<-tt$estimate[1]
ttestdf[i]$meanFALSE<-tt$estimate[2]
ttestdf[i]$pt<-tt$p.value
}
tt$estimate[1]
View(ttestdf)
tt
tt$estimate[1]
a<-tt$estimate[1]
a
a<-as.numeric(tt$estimate[1])
a
ttestdf<- data.frame(componente=character(), meanTRUE=double(),
meanFALSE=double(), pt=double(),
stringsAsFactors=FALSE)
for(i in 1:length(ordencomp)){
tt<-t.test(select(filter(df, UCO==TRUE, componente==ordencomp[i]), valorn),
select(filter(df, UCO==FALSE, componente==ordencomp[i]), valorn),
var.equal=TRUE, alternative="g")
ttestdf[i, 1]<-ordencomp[i]
ttestdf[i, 2]<-as.double(tt$estimate[1])
ttestdf[i,3]<-as.double(tt$estimate[2])
ttestdf[i,4]<-as.double(tt$p.value)
}
ordencomp[i]
select(filter(df, UCO==FALSE, componente==ordencomp[i]), valorn)
select(filter(df, UCO==TRUE, componente==ordencomp[i]), valorn)
ttestdf
nrow(filter(df, UCO==TRUE, componente==ordencomp[i]), valorn))
nrow(filter(df, UCO==TRUE, componente==ordencomp[i]), valorn)
nrow(filter(df, UCO==TRUE, componente==ordencomp[i]))
nrow(filter(df, componente==ordencomp[i]))
ttestdf<- data.frame(componente=character(), meanTRUE=double(),
meanFALSE=double(), pt=double(),
stringsAsFactors=FALSE)
for(i in 1:length(ordencomp)){
if(nrow(filter(df, componente==ordencomp[i])) > 10){
tt<-t.test(select(filter(df, UCO==TRUE, componente==ordencomp[i]), valorn),
select(filter(df, UCO==FALSE, componente==ordencomp[i]), valorn),
var.equal=TRUE, alternative="g")
ttestdf[i, 1]<-ordencomp[i]
ttestdf[i, 2]<-as.double(tt$estimate[1])
ttestdf[i,3]<-as.double(tt$estimate[2])
ttestdf[i,4]<-as.double(tt$p.value)
}
}
ttestdf
ttestdf<- data.frame(componente=character(), meanTRUE=double(),
meanFALSE=double(), pt=double(),
stringsAsFactors=FALSE)
for(i in 1:length(ordencomp)){
ttestdf[i, 1]<-ordencomp[i]
if(nrow(filter(df, componente==ordencomp[i])) > 10){
tt<-t.test(select(filter(df, UCO==TRUE, componente==ordencomp[i]), valorn),
select(filter(df, UCO==FALSE, componente==ordencomp[i]), valorn),
var.equal=TRUE, alternative="g")
ttestdf[i, 2]<-as.double(tt$estimate[1])
ttestdf[i,3]<-as.double(tt$estimate[2])
ttestdf[i,4]<-as.double(tt$p.value)
}
}
ttestdf
View(ttestdf)
View(ttestdf)
filter(ttestdf, pt<0.05)
filter(ttestdf, pt<0.1)
ttestdf<- data.frame(componente=character(), meanTRUE=double(),
meanFALSE=double(), pt=double(),
stringsAsFactors=FALSE)
for(i in 1:length(ordencomp)){
ttestdf[i, 1]<-ordencomp[i]
if(nrow(filter(df, componente==ordencomp[i])) > 10){
tt<-t.test(select(filter(df, UCO==TRUE, componente==ordencomp[i]), valorn),
select(filter(df, UCO==FALSE, componente==ordencomp[i]), valorn),
var.equal=TRUE, alternative="g", conf.level = 0.9)
ttestdf[i, 2]<-as.double(tt$estimate[1])
ttestdf[i,3]<-as.double(tt$estimate[2])
ttestdf[i,4]<-as.double(tt$p.value)
}
}
filter(ttestdf, pt<0.1)
filter(ttestdf, pt<0.2)
filter(ttestdf, pt<0.3)
filter(ttestdf, pt<0.4)
filter(ttestdf, pt<0.5)
ttestdf<- data.frame(componente=character(), meanTRUE=double(),
meanFALSE=double(), pt=double(),
stringsAsFactors=FALSE)
for(i in 1:length(ordencomp)){
ttestdf[i, 1]<-ordencomp[i]
if(nrow(filter(df, componente==ordencomp[i])) > 10){
tt<-t.test(select(filter(df, UCO==TRUE, componente==ordencomp[i]), valorn),
select(filter(df, UCO==FALSE, componente==ordencomp[i]), valorn),
var.equal=TRUE, alternative="g", conf.level = 0.75)
ttestdf[i, 2]<-as.double(tt$estimate[1])
ttestdf[i,3]<-as.double(tt$estimate[2])
ttestdf[i,4]<-as.double(tt$p.value)
}
}
filter(ttestdf, pt<0.25)
ttestdf<- data.frame(componente=character(), meanTRUE=double(),
meanFALSE=double(), pt=double(),
stringsAsFactors=FALSE)
for(i in 1:length(ordencomp)){
ttestdf[i, 1]<-ordencomp[i]
if(nrow(filter(df, componente==ordencomp[i])) > 30){
tt<-t.test(select(filter(df, UCO==TRUE, componente==ordencomp[i]), valorn),
select(filter(df, UCO==FALSE, componente==ordencomp[i]), valorn),
var.equal=TRUE, alternative="g", conf.level = 0.75)
ttestdf[i, 2]<-as.double(tt$estimate[1])
ttestdf[i,3]<-as.double(tt$estimate[2])
ttestdf[i,4]<-as.double(tt$p.value)
}
}
filter(ttestdf, pt<0.25)
I<-28
tt<-t.test(select(filter(df, UCO==TRUE, componente==ordencomp[i]), valorn),
select(filter(df, UCO==FALSE, componente==ordencomp[i]), valorn),
var.equal=TRUE, alternative="g", conf.level = 0.75)
tt
i<-26
t.test(select(filter(df, UCO==TRUE, componente==ordencomp[i]), valorn),
select(filter(df, UCO==FALSE, componente==ordencomp[i]), valorn),
var.equal=TRUE, alternative="g", conf.level = 0.75)
t.test(select(filter(df, UCO==TRUE, componente==ordencomp[i]), valorn),
select(filter(df, UCO==FALSE, componente==ordencomp[i]), valorn),
var.equal=TRUE, alternative="l", conf.level = 0.75)
t.test(select(filter(df, UCO==TRUE, componente==ordencomp[i]), valorn),
select(filter(df, UCO==FALSE, componente==ordencomp[i]), valorn),
var.equal=TRUE, alternative="t", conf.level = 0.95)
ttestdf<- data.frame(componente=character(), meanTRUE=double(),
meanFALSE=double(), pt=double(),
stringsAsFactors=FALSE)
for(i in 1:length(ordencomp)){
ttestdf[i, 1]<-ordencomp[i]
if(nrow(filter(df, componente==ordencomp[i])) > 30){
tt<-t.test(select(filter(df, UCO==TRUE, componente==ordencomp[i]), valorn),
select(filter(df, UCO==FALSE, componente==ordencomp[i]), valorn),
var.equal=TRUE, alternative="two.sided", conf.level = 0.95)
ttestdf[i, 2]<-as.double(tt$estimate[1])
ttestdf[i,3]<-as.double(tt$estimate[2])
ttestdf[i,4]<-as.double(tt$p.value)
}
}
filter(ttestdf, pt<0.05)
filter(ttestdf, !pt<0.05)
tt
filter(ttestdf, pt<0.05)
table(ttestdf)
format(ttestdf,digits=5)
format(ttestdf,digits=1)
format(ttestdf,digits=1,nsmall=4)
format(ttestdf,digits=2,nsmall=4)
format(ttestdf,digits=2,nsmall=2)
format(ttestdf,digits=4,nsmall=2)
format(ttestdf, format="f")
format(ttestdf, format="fg")
format(ttestdf, format="f.2")
format(ttestdf, format="f.0")
format(ttestdf, format="*.##")
format(ttestdf, format="f.##")
format(ttestdf, format="f.##", digits=2)
format(ttestdf, format="f.##", digits=4)
write.table(ttestdf)
require(gridExtra)
grid.table(ttestdf)
grid.table(ttestdf, digits=4)
grid.table(format(ttestdf, digits=4))
grid.table(format(ttestdf, digits=4, row.names=FALSE))
grid.table(format(ttestdf, digits=4, row.names=FALSE))
grid.table(format(ttestdf, digits=4, row.names=FALSE), rows="")
grid.table(format(ttestdf, digits=4, row.names=FALSE))
grid.table(format(ttestdf, digits=4, row.names=FALSE), rows=NULL)
grid.table(format(ttestdf, digits=4, row.names=FALSE), rows=NULL)
require(dplyr, quietly = TRUE)
require(ggplot2, quietly = TRUE)
require(zoo, quietly = TRUE)
require(gridExtra, quietly = TRUE)
if(!exists("ordencomplist")) source("ordencomplist.R", encoding="UTF-8")
if(!exists("plotgraf")) source("plotgraf.R", encoding="UTF-8")
if(!exists("leedatos")) source("leedatos.R", encoding="UTF-8")
if(!exists("filtraRHC")) source("filtraRHC.R", encoding="UTF-8")
if(!exists("ttest")) source("ttest.R", encoding="UTF-8")
ordencomp<-ordencomplist()
df<-leedatos()
df<-filtraRHC()
ttestdf<- ttest()
plotgraf()
require(dplyr, quietly = TRUE)
require(ggplot2, quietly = TRUE)
require(zoo, quietly = TRUE)
require(gridExtra, quietly = TRUE)
if(!exists("ordencomplist")) source("ordencomplist.R", encoding="UTF-8")
if(!exists("plotgraf")) source("plotgraf.R", encoding="UTF-8")
if(!exists("leedatos")) source("leedatos.R", encoding="UTF-8")
if(!exists("filtraRHC")) source("filtraRHC.R", encoding="UTF-8")
if(!exists("ttest")) source("ttest.R", encoding="UTF-8")
ordencomp<-ordencomplist()
df<-leedatos()
df<-filtraRHC()
ttestdf<- ttest()
plotgraf()
dev.off()
plotgraf()
grid.table(format(ttestdf, digits=4, row.names=FALSE), rows=NULL, size=5)
grid.table(format(ttestdf, digits=4, row.names=FALSE), rows=NULL, fontsize=5)
tt3 <- ttheme_minimal(
core=list(bg_params = list(fill = blues9[1:4], col=NA),
fg_params=list(fontface=3)),
colhead=list(fg_params=list(col="navyblue", fontface=4L)),
rowhead=list(fg_params=list(col="orange", fontface=3L)))
grid.table(format(ttestdf, digits=4, row.names=FALSE), rows=NULL, theme=tt3)
source('~/RProjects/Lab/plotgraf.R', encoding = 'UTF-8')
plotgraf()
require(grid)
dev.off()
plotgraf()
source('~/RProjects/Lab/plotgraf.R', encoding = 'UTF-8')
plotgraf()
plotgraf()
tt3 <- ttheme_minimal(
core=list(bg_params = list(fill = blues9[1:4], col=NA),
fg_params=list(fontface=1)),
colhead=list(fg_params=list(col="navyblue", fontface=2L)),
rowhead=list(fg_params=list(col="orange", fontface=2L)))
plotgraf()
tt3 <- ttheme_minimal(
core=list(bg_params = list(fill = blues9[1:4], col=NA),
fg_params=list(fontface=1, cex=1)),
colhead=list(fg_params=list(col="navyblue", fontface=2L)),
rowhead=list(fg_params=list(col="orange", fontface=2L)))
plotgraf()
tt3 <- ttheme_minimal(
core=list(bg_params = list(fill = blues9[1:4], col=NA),
fg_params=list(fontface=5, cex=5)),
colhead=list(fg_params=list(col="navyblue", fontface=2L)),
rowhead=list(fg_params=list(col="orange", fontface=2L)))
plotgraf()
tt3 <- ttheme_minimal(
core=list(bg_params = list(fill = blues9[1:4], col=NA),
fg_params=list(fontface=1, cex=5)),
colhead=list(fg_params=list(col="navyblue", fontface=2L)),
rowhead=list(fg_params=list(col="orange", fontface=2L)))
plotgraf()
tt3 <- ttheme_minimal(
core=list(bg_params = list(fill = blues9[1:4], col=NA),
fg_params=list(fontface=1, cex=0.5)),
colhead=list(fg_params=list(col="navyblue", fontface=2L)),
rowhead=list(fg_params=list(col="orange", fontface=2L)))
plotgraf()
tt3 <- ttheme_minimal(
core=list(bg_params = list(fill = blues9[1:4], col=NA),
fg_params=list(fontface=3, cex=0.5)),
colhead=list(fg_params=list(col="navyblue", fontface=4L, cex=1)),
rowhead=list(fg_params=list(col="orange", fontface=3L, cex=1)))
plotgraf()
names(ttestdf)
names(ttestdf)<-c("Componente", "Ivn > 132", "Ivn <= 132", "p (student t test)")
names(ttestdf)
source('~/RProjects/Lab/ttest.R')
source('~/RProjects/Lab/plotgraf.R', encoding = 'UTF-8')
source('~/RProjects/Lab/TestSGLDatos.R', echo=TRUE)
source('~/RProjects/Lab/ttest.R')
source('~/RProjects/Lab/TestSGLDatos.R', echo=TRUE)
source('~/RProjects/Lab/ttest.R')
source('~/RProjects/Lab/TestSGLDatos.R', echo=TRUE)
source('~/RProjects/Lab/ttest.R')
source('~/RProjects/Lab/TestSGLDatos.R', echo=TRUE)
plotgraf()
